class User
  include Mongoid::Document
  include Mongoid::Timestamps

  # # # # #
  # Generated by: -> rails generate devise user
  # TODO - research these fields

  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable,
         :recoverable, :rememberable, :trackable, :validatable

  ## Database authenticatable
  field :email,              type: String, default: ''
  field :encrypted_password, type: String, default: ''

  ## Recoverable
  field :reset_password_token,   type: String
  field :reset_password_sent_at, type: Time

  ## Rememberable
  field :remember_created_at, type: Time

  ## Trackable
  field :sign_in_count,      type: Integer, default: 0
  field :current_sign_in_at, type: Time
  field :last_sign_in_at,    type: Time
  field :current_sign_in_ip, type: String
  field :last_sign_in_ip,    type: String

  ## Confirmable
  # field :confirmation_token,   type: String
  # field :confirmed_at,         type: Time
  # field :confirmation_sent_at, type: Time
  # field :unconfirmed_email,    type: String # Only if using reconfirmable

  ## Lockable
  # field :failed_attempts, type: Integer, default: 0 # Only if lock strategy is :failed_attempts
  # field :unlock_token,    type: String # Only if unlock strategy is :email or :both
  # field :locked_at,       type: Time

  #
  #
  # # # # #

  # Attributes
  field :display_name,  type: String

  # Validations
  # TODO validates at least ONE letter
  validates :username, presence: true, uniqueness: true, length: { minimum: 2, maximum: 24 }

  # Relations
  has_many :contact_methods, class_name: 'ContactMethod'
  has_many :share_profiles, class_name: 'ShareProfile'
  has_many :contacts, class_name: 'Contacts'

  def is_admin? # TODO - this should leverage user.roles
    self.email == 'aeksco@gmail.com'
  end

end
